#+STARTUP: hidestars
#+TITLE: Reproducible Research Papers using Org-mode and R: A Guide
#+AUTHOR: Vikas Rawal\\ \small{Jawaharlal Nehru University, New Delhi}\\ \small{E-mail: \texttt{vikasrawal@gmail.com}}
#+COLUMNS: %25ITEM %TAGS %PRIORITY %T
#+property: exports results
#+property: session fbi
#+OPTIONS: H:2 toc:nil num:2
#+LaTeX_CLASS: article
#+LaTeX_CLASS_OPTIONS: [garamond]
#+LATEX_HEADER: \usepackage{comment,multirow,tabulary,parnotes,booktabs,threeparttable,tabularx} 
#+LATEX_HEADER: \linespread{1.3}
#+LaTeX_HEADER: \usepackage[T1]{fontenc}
#+LaTeX_HEADER: \usepackage[innermargin=1.5in,outermargin=1.25in,vmargin=1.25in]{geometry}
#+LaTeX_HEADER: \usepackage[below]{placeins}
#+LATEX_HEADER: \usepackage[dvipsnames,svgnames,table]{xcolor}
#+LATEX_HEADER: \hypersetup{colorlinks=true,citecolor=BrickRed,linkcolor=blue,citebordercolor={0 1 0}}
#+LATEX_HEADER: \usepackage[citestyle=authoryear-icomp,bibstyle=authoryear,hyperref=true,backref=true,maxcitenames=3,url=true,backend=biber,natbib=true]{biblatex}
#+LATEX_HEADER: \addbibresource{bibliobase.bib}

* Introduction

** Will this guide be useful for you?

This guide will be useful for you if you are writing a research paper,
a dissertation or an academic book. It would be particularly useful if
you plan to present statistical analysis and need to cite existing
literature in your work. 

Following this guide would need some investment of time. But this
would help you document your research in a way that is reproducible.
It will help you focus on the content of research and, once you have
specified your style, leave all formatting of your document to the
software. It will facilitate building a personal bibliographic
repository and repeated use of bibliographic information for citation
of literature.

In sum, if academic writing is going to be a medium to long-term
occupation for you, this investment of time is going to be
particularly beneficial.

** What is our goal?

After following instructions in this guide, you will have a document
preparation system that has following features.

+ With easy style specifications that you provide, the document will
  be almost-entirely automatically formatted by the software.

  - Complicated latex-style markup is a pain and Openoffice/MS-Word
    documents require too much manual formatting.
    
  - Org-mode has a powerful latex converter. The user is not required
    to write latex mark-up. Org-mode mark-up is extremely simple, and
    can be mastered in ten minutes.

  - Org-mode automatically creates latex files, and produces fully
    formatted pdf documents. This is the best output for working
    papers, reports and dissertations. Some journals also accept latex
    files, though this is rare among social science journals.

  - Org-mode also has a good openoffice exporter. With an appropriate
    openoffice template file, you can get a fully formatted openoffice
    or MS-Word output.

  - Org-mode can also produce html files. By specifying appropriate
    css classes, you can obtain ready to publish html files for your
    website. Org-mode can be hooked to publish to your blog.

+ Instead of including statistical results (tables, graphs, etc), we
  would embed appropriate R programs in the document, so that when the
  formatted output is produced, all programs are run to generate the
  results. Advantages of doing this are:
  - Any changes in the data being used can be accommodated just by
    publishing the document again.
  - Any modifications in statistical analysis are easily made by
    modifying the programs that are embedded in the file itself.
  - Anyone who has the org file, can reproduce your results. You can
    also extract all R programs from the org file and distribute those
    for reproduction of your results.

+ The document will be integrated with a citation manager, so that
  bibliographic information will be pulled automatically from a
  central database.
  - You will maintain a bibliographic database in bibtex format, that
    you can build over time, adding bibliographic information for
    works that you cite. 
  - Many websites (including Google Scholar) provide bibliographic
    information directly in bibtex format, and we will have integrated
    tools that will allow us to pull this information directly into
    our local database.
  - A fully formatted bibliography will be created for all documents
    cited in your papers and included in the paper when a final output
    is produced.

 
* Installing necessary software
This set up will work with any operating system (linux, Mac OS-X, or
Windows).

You need to install the following
+ Emacs 24
  + With org-mode, ess add-on packages
+ Texlive
+ R (and, of course, whatever additional R packages you want to use)

** Emacs                                                             :CHECK:

Emacs can be installed using package managers of all GNU/Linux
distributions. Latest versions of most common distributions provide
version 24. I strongly recommend using the latest version of Emacs.

For Mac OS-X, either use Aquamacs 3.0 or install Emacs using homebrew.
The built-in emacs on OS-X is an older version, and it would be a good
idea to install the latest version instead.

Starting version 24, Emacs include a package-manager. You can install
ess and org-mode using the package manager. 

To use the package manager, press alt-x in emacs, and then type
package-list-packages and press return. This would bring up a list of
packages. Find ess, and with the cursor on it, press return. Then
click install. 

You could also install org-mode similarly. However, since org-mode is
under heavy development, and it is really a good idea to keep up with
the latest development, it is better to clone it from the git
repository of org-mode, and update it regularly.

** Texlive

Texlive can also be installed from package managers in most GNU/Linux
distribution. 

For OS-X, you could install MacTeX from http://www.tug.org/mactex/

For Windows, download Texlive and follow instructions from
https://www.tug.org/texlive/doc.html


** R (http://www.r-project.org)

In this guide, I assume that you are familiar with R. I will not cover
R programming in this guide. 

For GNU/Linux, R can be installed from native package managers (look
for r-base in debian and debian-based distributions). For Mac OS-X and
Windows, download and see installation instructions at
http://www.r-project.org
 
** Customising emacs

org customisation

* Basics of Emacs

GNU Emacs is an extensible platform. Although its primary function is
as an editor, it can be extended to do almost anything that you would
want your computer to do. Now, that really is not an overstatement. It
is a worthwhile aim to slowly shift an increasing number of tasks you
do on your computer to emacs-based solutions. For each major task you
do on your computer, ask if it can be done using emacs. For almost
everything, the answer is yes, and in most cases, emacs does it better
than other software you are used to. Many emacs users have learnt
emacs by shifting, one-by-one, to emacs for all major tasks that they
do on the computer.

I am not going to give a detailed guide to use of emacs. A few tasks
for which I use Emacs include
 + File management (copying files, moving files, creating directories)
 + Reading and writing e-mails
 + Reading RSS feeds
 + Calender, scheduler, planner
 + Calculator
 + Statistical work (by hooking Emacs to R)
 + And, of course, as an editor (including for writing research papers)

For the present purpose, I will just make you familiar with basic
commands in emacs. 

** Notations

In emacs, a buffer is equivalent to a tab in a web browser. It is
normal to have several buffers open at the same time. Each file opens
in emacs as a buffer. Buffers could also have processes like R running
in them. Emacs displays any messages for you in a separate buffer.

Most commands in emacs are given using the Control (ctrl) or the Meta
(usually, alt) keys. Control key is usually referred to as =C-= and the
Meta key as =M-=. So a command =C-c= means pressing Control and c
simultaneously. Command =M-x= means pressing Meta and x simultaneously.
Everything is case-sensitive. So =M-X= would mean, pressing Meta, Shift
and x simultaneously. =C-c M-x l= would mean pressing C-c, release, then
M-x, release, and then l.


** Basic commands

Table [[essential-emacs-commands]] gives the commands that are the most
important. This is a minimal set, commands that you should aim to
learn as soon as possible. There are many more, which you will learn
as you start using emacs.

All commands have a verbose version that can be used by pressing M-x
and writing the command. For example, =M-x find-file= to open a file.
All major commands are also mapped to a shortcut. For example, instead
of typing =M-x find-file= to open a file, you can say =C-x C-f=. I
remember shortcuts for commands that I use most frequently. For
others, I use the verbose versions. Over time, one learns more
shortcuts and starts using them instead of the verbose versions.

#+CAPTION: Essential emacs commands
#+NAME: essential-emacs-commands
#+attr_latex: :environment tabulary :width \textwidth :align Lll
| Description                                                                                                    | Verbose command           | Shortcut     |
|                                                                                                                | =M-x= followed by         |              |
|----------------------------------------------------------------------------------------------------------------+---------------------------+--------------|
| /*Opening files, saving and closing*/                                                                          |                           |              |
| /Open a file/                                                                                                  | *find-file*               | =C-x C-f=    |
| /Save the buffer/file/                                                                                         | *save-buffer*             | =C-x C-s=    |
| /Save as: prompts for a new filename and saves the buffer into it/                                             | *write-named-file*        | =C-x C-w=    |
| /Save all buffers and quit emacs/                                                                              | *save-buffers-kill-emacs* | =C-x C-c=    |
| /*Copy, Cut and Delete Commands*/                                                                              |                           |              |
| /Delete the rest of the current line/                                                                          | *kill-line*               | =C-k=        |
| /To select text, press this at the beginning of the region and then take the cursor to the end/                | *set-mark-command*        | =C-spacebar= |
| /Cut the selected region/                                                                                      | *kill-region*             | =C-w=        |
| /Copy the selected region/                                                                                     | *copy-region-as-kill*     | =M-w=        |
| /Paste or insert at current cursor location/                                                                   | *yank*                    | =C-y=        |
| /*Search Commands*/                                                                                            |                           |              |
| /prompts for text string and then searches from the current cursor position forwards in the buffer/            | *isearch-forward*         | =C-s=        |
| /Find-and-replace: replaces one string with another, one by one, asking for each occurrence of search string / | *query-replace*           | =M-%=        |
| /Find-and-replace: replaces all occurrences of one string with another /                                       | *replace-string*          |              |
| /*Other commands*/                                                                                             |                           |              |
| Divide a long sentence into multiple lines, each smaller than the maximum width specified                      | *fill-paragraph*          | M-q          |
| /*Window and Buffer Commands*/                                                                                 |                           |              |
| /Switch to another buffer that is already open/                                                                | *switch-to-buffer*        | =C-x b=      |
| /lists those buffers currently loaded into =emacs= /                                                           | *list-buffers*            | =C-x C-b=    |
| /Splits current window into two windows, each window can show same or different buffers/                       | *double-window*           | =C-x 2=      |
| /Delete current window; if the window is split into two parts, this would bring it back to one part/           | *zero-window*             | =C-x 0=      |
| /When you have two or more windows, move the cursor to the next window /                                       | *other-window*            | =C-x o=      |
| /*Canceling and undoing*/                                                                                      |                           |              |
| /Cancel of abort the command in progress/                                                                      | *keyboard-quit*           | =C-g=        |
| /undoes the last command typed, in case you made a mistake/                                                    | *undo*                    | =C-x u=      |

\FloatBarrier

* Basics of Org-mode
** Preamble

An Org file has a few special lines at the top that set up the
environment. Following lines are an example of the minimal set of
lines that we shall use.
: #+TITLE: Reproducible Research Papers using Org-mode and R: A Guide
: #+AUTHOR: Vikas Rawal
: #+DATE: May 4, 2014

As you can see, each line starts with a keyword, and the values for
this keyword are specified after the colon.

Table [[special-lines]] gives details of a few major special lines that we shall use.

#+NAME: special-lines
#+CAPTION: Main special lines to be used at the top of an Org buffer
#+attr_latex: :environment tabulary :width \textwidth :align lL
| Keyword   | Purpose                                                                                                                            |
|-----------+------------------------------------------------------------------------------------------------------------------------------------|
| #+TITLE   | To declare title of the paper                                                                                                      |
| #+AUTHOR  | To declare author/s of the paper                                                                                                   |
| #+DATE    | Sets the date. If blank, no date is used. If this keyword is omitted, current date is used.                                        |
| #+OPTIONS | Following options are useful. Multiple options can be separated by a space and specified on the same line.                         |
|           | toc:nil (Do not include a Table of contents)                                                                                       |
|           | H:2  (Treat top two levels of headlines as section levels, and anything below that as item list. Modify the number as appropriate) |
|           | num:2 (Number top two levels of headlines. Modify the number as appropriate.)                                                      |

** Sections and headlines

A headline in org starts with one or more stars (*) followed by a
space. We shall use this to create sections in our document. 

For the main sections, we use the top-level headlines created by using
a single star. For sub-sections, we use second-level headline.
Second-level headlines start with two stars. Third level headlines
start with three stars. You can create as many levels of sections as
you need. 

See the following example. Note that headlines are not numbered. We
leave section numbering for org-mode to handle automatically.

#+BEGIN_SRC org :exports code
  ,* Introduction
  ,* Literature review
  ,** Is this an important issue
  Now indulgence dissimilar for his thoroughly has terminated. Agreement
  offending commanded my an. Change wholly say why eldest period. Are
  projection put celebrated particular unreserved joy unsatiable its. In
  then dare good am rose bred or. On am in nearer square wanted.
  ,** What are the major disputes in the literature
  ,*** adulterated text
  Instrument cultivated alteration any favourable expression law far
  nor. Both new like tore but year. An from mean on with when sing pain.
  Oh to as principles devonshire companions unsatiable an delightful.
  The ourselves suffering the sincerity. Inhabit her manners adapted age
  certain. Debating offended at branched striking be subjects.
  ,*** Unadulterated prose
  Announcing of invitation principles in. Cold in late or deal.
  Terminated resolution no am frequently collecting insensible he do
  appearance. Projection invitation affronting admiration if no on or.
  It as instrument boisterous frequently apartments an in. Mr excellence
  inquietude conviction is in unreserved particular. You fully seems
  stand nay own point walls. Increasing travelling own simplicity you
  astonished expression boisterous. Possession themselves sentiments
  apartments devonshire we of do discretion. Enjoyment discourse ye
  continued pronounce we necessary abilities.
  ,* Methodology
  This is the next top-level section. There are no sub-sections under this.
  ,* Results
  This is the third top-level section. Theere are sub-sections under this. 
  ,** Result 1
  This is a sub-section under section Results.
  ,** Result 2
  This is another sub-section under section Results
  ,* Conclusions 
  This is the next and final top-level section. There are  no sub-sections under it.
#+END_SRC


Org handles these headlines beautifully. With your cursor on the
headline, pressing tab folds-in the contents of a headline. If you
press tab on a folded headline, it opens to display the contents. If
there are multiple levels of headlines, these open in stages as you
repeat pressing the tab key.

When you are on a headline, pressing M-return creates a new headline
at the same level (that is, with the same number of stars). Once you
are on the new headline, a tab movies it to a lower level (that is, a
star is added), and shift-tab moves it to a higher level (that is, a
star is removed).

(Further reading, [[http://orgmode.org/manual/Headlines.html#Headlines][Headlines]] in Org manual)

** Lists
** Footnotes
** Tables

Org-mode has an in-built table editor, which is very simple to use.

We shall directly create only those tables in Org that present content
that is not being produced through statistical analysis. For tables
that are created through statistical analysis, we shall embed R
programs rather than the tables themselves. This is discussed in
Section [[Org-mode and R]] of this guide.

See the Org syntax for a sample table below.

: | Serial no | Name   | Age |
: |-----------+--------+-----|
: |         1 | Satish |  43 |
: |         2 | Ramesh |  21 |
: |         3 | Alicia |  42 |
: |         4 | Begum  |  52 |

+ Org-mode creates tables by separating columns using  |.
+ Once you create the first row by separating columns using |,
  pressing tabs takes you from the first column to the next.
+ At the end of the row, pressing tab again, creates a new blank row.
  You can also create a new blank row by pressing return anywhere in
  the last row.
+ For creating a horizontal line anywhere, type |- at the starting of
  the line, and press tab. 
+ Contents of each cell are aligned automatically by Org.
+ To delete a row, use C-k (M-x kill-line).

Org provides various commands for manipulating design of tables. Table
[[org-table-commands]] provides the most important ones. Note that Table
[[org-table-commands]] is created using Org mode. It also gives you an
idea of how the table would look eventually.

#+NAME: org-table-commands
#+CAPTION: Commands to manipulate tables in Org
| Command     | Description                                            |
|-------------+--------------------------------------------------------|
| M-<left>    | Move the column left                                   |
| M-<right>   | Move the column right                                  |
| M-S-<left>  | Delete the current column                              |
| M-S-<right> | Insert a new column to the left of the cursor position |
| M-<up>      | Move row up                                            |
| M-<down>    | Move row down                                          |
| M-S-<up>    | Delete the current row or horizontal line              |
| M-S-<down>  | Insert a new row above the current row                 |

For more commands for manipulating tables, see [[http://www.orgmode.org/manual/Tables.html][this section of the Org
manual]]. In particular, you may want to look at spreadsheet-like
functions of the table editor.

One major limitation of Org tables is lack of support for merging of
cells. 

\FloatBarrier

** Images

You can insert images in documents as follows

: [[a.jpg]]

Once again, graphs produced by R, will be inserted automatically.

** Captions and cross-references

As shown below, a line starting by #+CAPTION placed just about a table
or a figure adds a title to it. All Tables and Figures titles are
automatically numbered.
: #+CAPTION: Percentage of literate men and women, by country (per cent)

For referring to these Tables and Figures in the text, we shall name
each table and figure in a line starting with #+NAME as below.

: #+NAME: literacy-rate

Finally, an image will be inserted as follows.

#+BEGIN_SRC org :exports code
  ,#+NAME: literacy-rate
  ,#+CAPTION: Percentage of literate men and women, by country (per cent)
  [[a.jpg]]
#+end_src

Similarly, a table will be inserted as follows.

#+BEGIN_SRC org :exports code
  ,#+NAME: literacy-rate-table
  ,#+CAPTION: Percentage of literate men and women, by country (per cent)
  | Country    | Men | Women |
  |------------+-----+-------|
  | India      |  75 |    43 |
  | Bangladesh |  83 |    63 |
  | Rwanda     |  77 |    60 |

#+end_src

To refer to the Table above in the text, write Table [ [
literacy-rate-table ] ], that is, enclose table name between double
square brackets. When the formatted output is produced, it would be
automatically converted to the appropriate number.

All objects with captions are numbered, and cross-references to these
named objects, are converted to these numbers. If new objects are
inserted in the paper, numbering will be adjusted automatically.

* Org-mode and R
** Embedding R Code in an Org buffer

There are three kinds of scenarios that I normally use.



** Presentation of Tables 

** Presentation of Graphs



* Citations and Bibliographies using Org-mode

+ Building your bibtex database
+ biblatex is the citation manager of choice.
  + Setting up use of biblatex
+ Integration with reftex
  + Can also use other bibtex managers (JabRef or BibDesk (for OS-X
    only) are very good).
+ 

* Some aspects of formatting
+ Emacs theme
+ Garamond font
+ Geometry for margins
+ Acknowledgements in footnote
+ floatbarrier
+ wrapping text in Table columns
+ running code at the time of export?

* Presentations
* Creating Openoffice/MS-Word Documents

